from gpiozero import LED
from gpiozero import Button
from time import sleep
from time import time

# Using a push button as input and an LED as output, 
# you will enter number (0-9) in Morse Code.
# The LED will echo each dot or dash as you press and the 
# decoded digits will be printed on your terminal

# Short press (0.4 seconds or less) = dot
# Long press (more than 0.4 seconds) = dash

# LED should echo after each press 
# (short blink for dot, longer blink for dash)

# If you pause for at least one second between taps
# program will treat as end and decode number

# Longer pause of two seconds or more should insert a space 
# between digits

# Define button, Pi pin number GPIO27 
# Default pull_up = True (default HIGH, press = LOW)
button = Button(27, pull_up = True)

# Define LED
led = LED(17)

# Morse code definitions (0 = dot, 1 = dash)
zero = [1, 1, 1, 1, 1]
one = [0, 1, 1, 1, 1]
two = [0, 0, 1, 1, 1]
three = [0, 0, 0, 1, 1]
four = [0, 0, 0, 0, 1]
five = [0, 0, 0, 0, 0]
six = [1, 0, 0, 0, 0]
seven = [1, 1, 0, 0, 0]
eight = [1, 1, 1, 0, 0]
nine = [1, 1, 1, 1, 0]

def long_blink():
    led.on()
    sleep(0.6)
    led.off()
    sleep(0.6)


def short_blink():
    led.on()
    sleep(0.2)
    led.off()
    sleep(0.2)

def decode(array):

    # Interpret Number
    if (array == zero):
        return "0"
    elif (array == one):
        return "1"
    elif (array == two):
        return "2"
    elif (array == three):
        return "3"
    elif (array == four):
        return "4"
    elif (array == five):
        return "5"
    elif (array == six):
        return "6"
    elif (array == seven):
        return "7"
    elif (array == eight):
        return "8"
    elif (array == nine):
        return "9"


def main() :
    morse_number = []
    counter = 0
    #stop = True


    while (True):

        # Track time to press
        start_pause = time()
        button.wait_for_press()
        end_pause = time()

        # Calculate pause time
        pauseTime = end_pause - start_pause

        # Track press time
        start_press = time()
        button.wait_for_release()
        end_press = time()

        # Calculate press time
        pressTime = end_press - start_press

        if (counter != 5):

            # Short Blink
            if (pressTime <= 0.4):
                short_blink()
                morse_number.append(0)
                counter += 1

            # Long Blink
            elif (pressTime > 0.4):
                long_blink()
                morse_number.append(1)
                counter += 1
        else:

            # Print decoded to terminal
            print(decode(morse_number))
            morse_number = []
            counter = 0

        

        if (pauseTime >= 2.0 ):

            # Add a space
            print(" ")
                


main()


